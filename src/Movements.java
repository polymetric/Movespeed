
public class Movements {
	public static String squares_cw(Machine machine, int count, float speed, float accel) {
		String output = "";

		output += String.format("; squares - divs %s, speed %s, accel %s\n", count, speed, accel);

		for (int i = 0; i < count; i++) {
			int div = (int) Math.pow(2, i);
			output += square_cw(machine, div, speed, accel);
		}

		output += "\n";

		return output;
	}
	
	public static String squares_crosses_cw(Machine machine, int count, float speed, float accel) {
		String output = "";

		output += String.format("; squares - divs %s, speed %s, accel %s\n", count, speed, accel);

		for (int i = 0; i < count; i++) {
			int div = (int) Math.pow(2, i);
			output += square_cw(machine, div, speed, accel);
			output += single_cross(machine, div, speed, accel);
		}

		output += "\n";

		return output;
	}

	public static String circles_cw(Machine machine, int count, float speed, float accel) {
		String output = "";

		output += String.format("; circles - divs %s, speed %s, accel %s\n", count, speed, accel);

		for (int i = 0; i < count; i++) {
			int div = (int) Math.pow(2, i);
			output += circle_cw(machine, div, speed, accel);
		}

		output += "\n";

		return output;
	}

	public static String circles_ccw(Machine machine, int count, float speed, float accel) {
		String output = "";

		output += String.format("; circles - divs %s, speed %s, accel %s\n", count, speed, accel);

		for (int i = 0; i < count; i++) {
			int div = (int) Math.pow(2, i);
			output += circle_ccw(machine, div, speed, accel);
		}

		output += "\n";

		return output;
	}

	public static String square_cw(Machine machine, int div, float speed, float accel) {
		String output = "";

		output += String.format("; square - clockwise, div %s\n", div);

		output += Gcodes.set_speed(speed);
		output += Gcodes.set_accel(accel);

		output += Gcodes.move_xy(0, 0);
		output += Gcodes.move_xy(0, machine.Y_LEN / div);
		output += Gcodes.move_xy(machine.X_LEN / div, machine.Y_LEN / div);
		output += Gcodes.move_xy(machine.X_LEN / div, 0);
		output += Gcodes.move_xy(0, 0);

		return output;
	}

	public static String double_cross(Machine machine, int div, float speed, float accel) {
		String output = "";

		output += String.format("; cross - double, div %s\n", div);

		output += Gcodes.set_speed(speed);
		output += Gcodes.set_accel(accel);

		output += Gcodes.move_xy(0, 0);
		output += Gcodes.move_xy(machine.X_LEN / div, machine.Y_LEN / div);
		output += Gcodes.move_xy(0, 0);
		output += Gcodes.move_xy(machine.X_LEN / div, 0);
		output += Gcodes.move_xy(0, machine.Y_LEN / div);
		output += Gcodes.move_xy(machine.X_LEN / div, 0);
		output += Gcodes.move_xy(0, 0);

		return output;
	}

	public static String single_cross(Machine machine, int div, float speed, float accel) {
		String output = "";

		output += String.format("; cross - single div %s\n", div);

		output += Gcodes.set_speed(speed);
		output += Gcodes.set_accel(accel);

		output += Gcodes.move_xy(0, 0);
		output += Gcodes.move_xy(machine.X_LEN / div, machine.Y_LEN / div);
		output += Gcodes.move_xy(0, machine.Y_LEN / div);
		output += Gcodes.move_xy(machine.X_LEN / div, 0);
		output += Gcodes.move_xy(0, 0);

		return output;
	}

	public static String circle_cw(Machine machine, int div, float speed, float accel) {
		String output = "";

		output += String.format("; circle - div %s\n", div);

		output += Gcodes.set_speed(speed);
		output += Gcodes.set_accel(accel);

		if (machine.X_LEN>=machine.Y_LEN) {
			// These equations were generated by trial and error. I don't think a single person on this planet could tell you
			// what the fuck is going on here.
			output += Gcodes.move_xy(machine.X_LEN/2-machine.X_LEN/2/div+(machine.X_LEN-machine.Y_LEN)/2/div, machine.Y_LEN/2);
			output += Gcodes.move_arc_cw(machine.Y_LEN/2/div, 0);
		} else {
			output += Gcodes.move_xy(machine.X_LEN/2-machine.X_LEN/2/div, machine.Y_LEN/2);
			output += Gcodes.move_arc_cw(machine.X_LEN/2/div, 0);
		}
		
		return output;
	}

	public static String circle_ccw(Machine machine, int div, float speed, float accel) {
		String output = "";

		output += String.format("; circle - div %s\n", div);

		output += Gcodes.set_speed(speed);
		output += Gcodes.set_accel(accel);

		if (machine.X_LEN<=machine.Y_LEN) {
			// These equations were generated by trial and error. I don't think a single person on this planet could tell you
			// what the fuck is going on here.
			output += Gcodes.move_xy(machine.X_LEN/2, machine.Y_LEN/2-machine.Y_LEN/2/div+(machine.Y_LEN-machine.X_LEN)/2/div);
			output += Gcodes.move_arc_ccw(machine.X_LEN/2/div, 0);
		} else {
			output += Gcodes.move_xy(machine.X_LEN/2, machine.Y_LEN/2-machine.Y_LEN/2/div);
			output += Gcodes.move_arc_ccw(0, machine.Y_LEN/2/div);
		}
		
		return output;
	}
}
